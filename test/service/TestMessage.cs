// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: TestMessage.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Com.Variflight.Dataservice.Test {

  /// <summary>Holder for reflection information generated from TestMessage.proto</summary>
  public static partial class TestMessageReflection {

    #region Descriptor
    /// <summary>File descriptor for TestMessage.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static TestMessageReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChFUZXN0TWVzc2FnZS5wcm90bxIfY29tLnZhcmlmbGlnaHQuZGF0YXNlcnZp",
            "Y2UudGVzdBoeZ29vZ2xlL3Byb3RvYnVmL3dyYXBwZXJzLnByb3RvGhtnb29n",
            "bGUvcHJvdG9idWYvZW1wdHkucHJvdG8isAUKB3N0dWRlbnQSCgoCaWQYASAB",
            "KAUSDAoEbmFtZRgCIAEoCRILCgNhZ2UYAyABKAUSQAoEdGFncxgEIAMoCzIy",
            "LmNvbS52YXJpZmxpZ2h0LmRhdGFzZXJ2aWNlLnRlc3Quc3R1ZGVudC5UYWdz",
            "RW50cnkSLQoHY29tbWVudBgFIAEoCzIcLmdvb2dsZS5wcm90b2J1Zi5TdHJp",
            "bmdWYWx1ZRIoCgNpdngYBiABKAsyGy5nb29nbGUucHJvdG9idWYuSW50MzJW",
            "YWx1ZRJCCgV0YWdzMhgHIAMoCzIzLmNvbS52YXJpZmxpZ2h0LmRhdGFzZXJ2",
            "aWNlLnRlc3Quc3R1ZGVudC5UYWdzMkVudHJ5EjMKAXMYZCABKAsyKC5jb20u",
            "dmFyaWZsaWdodC5kYXRhc2VydmljZS50ZXN0LnN0dWRlbnQSPQoCbXMY6Qcg",
            "AygLMjAuY29tLnZhcmlmbGlnaHQuZGF0YXNlcnZpY2UudGVzdC5zdHVkZW50",
            "Lk1zRW50cnkSNQoCcnMYmU4gAygLMiguY29tLnZhcmlmbGlnaHQuZGF0YXNl",
            "cnZpY2UudGVzdC5zdHVkZW50EicKAnJpGAogAygLMhsuZ29vZ2xlLnByb3Rv",
            "YnVmLkludDY0VmFsdWUaKwoJVGFnc0VudHJ5EgsKA2tleRgBIAEoCRINCgV2",
            "YWx1ZRgCIAEoCToCOAEaSQoKVGFnczJFbnRyeRILCgNrZXkYASABKAkSKgoF",
            "dmFsdWUYAiABKAsyGy5nb29nbGUucHJvdG9idWYuSW50NjRWYWx1ZToCOAEa",
            "UwoHTXNFbnRyeRILCgNrZXkYASABKAUSNwoFdmFsdWUYAiABKAsyKC5jb20u",
            "dmFyaWZsaWdodC5kYXRhc2VydmljZS50ZXN0LnN0dWRlbnQ6AjgBIkEKBGV4",
            "YW0SCgoCaWQYASABKAUSCwoDY2xzGAIgASgJEhEKCXN0dWRlbnRpZBgDIAEo",
            "BRINCgVzY29yZRgEIAEoBSLhAQoMU3R1ZGVudFNjb3JlEjMKAXMYASABKAsy",
            "KC5jb20udmFyaWZsaWdodC5kYXRhc2VydmljZS50ZXN0LnN0dWRlbnQSRwoF",
            "ZXhhbXMYAiADKAsyOC5jb20udmFyaWZsaWdodC5kYXRhc2VydmljZS50ZXN0",
            "LlN0dWRlbnRTY29yZS5FeGFtc0VudHJ5GlMKCkV4YW1zRW50cnkSCwoDa2V5",
            "GAEgASgJEjQKBXZhbHVlGAIgASgLMiUuY29tLnZhcmlmbGlnaHQuZGF0YXNl",
            "cnZpY2UudGVzdC5leGFtOgI4ASLCAQoQU3R1ZGVudFNjb3Jlc01hcBJPCgdy",
            "ZXN1bHRzGAEgAygLMj4uY29tLnZhcmlmbGlnaHQuZGF0YXNlcnZpY2UudGVz",
            "dC5TdHVkZW50U2NvcmVzTWFwLlJlc3VsdHNFbnRyeRpdCgxSZXN1bHRzRW50",
            "cnkSCwoDa2V5GAEgASgFEjwKBXZhbHVlGAIgASgLMi0uY29tLnZhcmlmbGln",
            "aHQuZGF0YXNlcnZpY2UudGVzdC5TdHVkZW50U2NvcmU6AjgBMmkKDFNjb3Jl",
            "U2VydmljZRJZCgxHZXRBbGxTY29yZXMSFi5nb29nbGUucHJvdG9idWYuRW1w",
            "dHkaMS5jb20udmFyaWZsaWdodC5kYXRhc2VydmljZS50ZXN0LlN0dWRlbnRT",
            "Y29yZXNNYXBiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Protobuf.WellKnownTypes.WrappersReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.EmptyReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Variflight.Dataservice.Test.student), global::Com.Variflight.Dataservice.Test.student.Parser, new[]{ "Id", "Name", "Age", "Tags", "Comment", "Ivx", "Tags2", "S", "Ms", "Rs", "Ri" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, null, null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Variflight.Dataservice.Test.exam), global::Com.Variflight.Dataservice.Test.exam.Parser, new[]{ "Id", "Cls", "Studentid", "Score" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Variflight.Dataservice.Test.StudentScore), global::Com.Variflight.Dataservice.Test.StudentScore.Parser, new[]{ "S", "Exams" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Variflight.Dataservice.Test.StudentScoresMap), global::Com.Variflight.Dataservice.Test.StudentScoresMap.Parser, new[]{ "Results" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, })
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// 学生
  /// </summary>
  public sealed partial class student : pb::IMessage<student> {
    private static readonly pb::MessageParser<student> _parser = new pb::MessageParser<student>(() => new student());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<student> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Variflight.Dataservice.Test.TestMessageReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public student() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public student(student other) : this() {
      id_ = other.id_;
      name_ = other.name_;
      age_ = other.age_;
      tags_ = other.tags_.Clone();
      Comment = other.Comment;
      Ivx = other.Ivx;
      tags2_ = other.tags2_.Clone();
      s_ = other.s_ != null ? other.s_.Clone() : null;
      ms_ = other.ms_.Clone();
      rs_ = other.rs_.Clone();
      ri_ = other.ri_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public student Clone() {
      return new student(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    /// <summary>
    /// 学生ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 2;
    private string name_ = "";
    /// <summary>
    /// 姓名
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "age" field.</summary>
    public const int AgeFieldNumber = 3;
    private int age_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Age {
      get { return age_; }
      set {
        age_ = value;
      }
    }

    /// <summary>Field number for the "tags" field.</summary>
    public const int TagsFieldNumber = 4;
    private static readonly pbc::MapField<string, string>.Codec _map_tags_codec
        = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10), pb::FieldCodec.ForString(18), 34);
    private readonly pbc::MapField<string, string> tags_ = new pbc::MapField<string, string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, string> Tags {
      get { return tags_; }
    }

    /// <summary>Field number for the "comment" field.</summary>
    public const int CommentFieldNumber = 5;
    private static readonly pb::FieldCodec<string> _single_comment_codec = pb::FieldCodec.ForClassWrapper<string>(42);
    private string comment_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Comment {
      get { return comment_; }
      set {
        comment_ = value;
      }
    }


    /// <summary>Field number for the "ivx" field.</summary>
    public const int IvxFieldNumber = 6;
    private static readonly pb::FieldCodec<int?> _single_ivx_codec = pb::FieldCodec.ForStructWrapper<int>(50);
    private int? ivx_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int? Ivx {
      get { return ivx_; }
      set {
        ivx_ = value;
      }
    }


    /// <summary>Field number for the "tags2" field.</summary>
    public const int Tags2FieldNumber = 7;
    private static readonly pbc::MapField<string, long?>.Codec _map_tags2_codec
        = new pbc::MapField<string, long?>.Codec(pb::FieldCodec.ForString(10), pb::FieldCodec.ForStructWrapper<long>(18), 58);
    private readonly pbc::MapField<string, long?> tags2_ = new pbc::MapField<string, long?>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, long?> Tags2 {
      get { return tags2_; }
    }

    /// <summary>Field number for the "s" field.</summary>
    public const int SFieldNumber = 100;
    private global::Com.Variflight.Dataservice.Test.student s_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Com.Variflight.Dataservice.Test.student S {
      get { return s_; }
      set {
        s_ = value;
      }
    }

    /// <summary>Field number for the "ms" field.</summary>
    public const int MsFieldNumber = 1001;
    private static readonly pbc::MapField<int, global::Com.Variflight.Dataservice.Test.student>.Codec _map_ms_codec
        = new pbc::MapField<int, global::Com.Variflight.Dataservice.Test.student>.Codec(pb::FieldCodec.ForInt32(8), pb::FieldCodec.ForMessage(18, global::Com.Variflight.Dataservice.Test.student.Parser), 8010);
    private readonly pbc::MapField<int, global::Com.Variflight.Dataservice.Test.student> ms_ = new pbc::MapField<int, global::Com.Variflight.Dataservice.Test.student>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::Com.Variflight.Dataservice.Test.student> Ms {
      get { return ms_; }
    }

    /// <summary>Field number for the "rs" field.</summary>
    public const int RsFieldNumber = 10009;
    private static readonly pb::FieldCodec<global::Com.Variflight.Dataservice.Test.student> _repeated_rs_codec
        = pb::FieldCodec.ForMessage(80074, global::Com.Variflight.Dataservice.Test.student.Parser);
    private readonly pbc::RepeatedField<global::Com.Variflight.Dataservice.Test.student> rs_ = new pbc::RepeatedField<global::Com.Variflight.Dataservice.Test.student>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Com.Variflight.Dataservice.Test.student> Rs {
      get { return rs_; }
    }

    /// <summary>Field number for the "ri" field.</summary>
    public const int RiFieldNumber = 10;
    private static readonly pb::FieldCodec<long?> _repeated_ri_codec
        = pb::FieldCodec.ForStructWrapper<long>(82);
    private readonly pbc::RepeatedField<long?> ri_ = new pbc::RepeatedField<long?>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<long?> Ri {
      get { return ri_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as student);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(student other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Name != other.Name) return false;
      if (Age != other.Age) return false;
      if (!Tags.Equals(other.Tags)) return false;
      if (Comment != other.Comment) return false;
      if (Ivx != other.Ivx) return false;
      if (!Tags2.Equals(other.Tags2)) return false;
      if (!object.Equals(S, other.S)) return false;
      if (!Ms.Equals(other.Ms)) return false;
      if(!rs_.Equals(other.rs_)) return false;
      if(!ri_.Equals(other.ri_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Age != 0) hash ^= Age.GetHashCode();
      hash ^= Tags.GetHashCode();
      if (comment_ != null) hash ^= Comment.GetHashCode();
      if (ivx_ != null) hash ^= Ivx.GetHashCode();
      hash ^= Tags2.GetHashCode();
      if (s_ != null) hash ^= S.GetHashCode();
      hash ^= Ms.GetHashCode();
      hash ^= rs_.GetHashCode();
      hash ^= ri_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (Age != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Age);
      }
      tags_.WriteTo(output, _map_tags_codec);
      if (comment_ != null) {
        _single_comment_codec.WriteTagAndValue(output, Comment);
      }
      if (ivx_ != null) {
        _single_ivx_codec.WriteTagAndValue(output, Ivx);
      }
      tags2_.WriteTo(output, _map_tags2_codec);
      ri_.WriteTo(output, _repeated_ri_codec);
      if (s_ != null) {
        output.WriteRawTag(162, 6);
        output.WriteMessage(S);
      }
      ms_.WriteTo(output, _map_ms_codec);
      rs_.WriteTo(output, _repeated_rs_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Age != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Age);
      }
      size += tags_.CalculateSize(_map_tags_codec);
      if (comment_ != null) {
        size += _single_comment_codec.CalculateSizeWithTag(Comment);
      }
      if (ivx_ != null) {
        size += _single_ivx_codec.CalculateSizeWithTag(Ivx);
      }
      size += tags2_.CalculateSize(_map_tags2_codec);
      if (s_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(S);
      }
      size += ms_.CalculateSize(_map_ms_codec);
      size += rs_.CalculateSize(_repeated_rs_codec);
      size += ri_.CalculateSize(_repeated_ri_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(student other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Age != 0) {
        Age = other.Age;
      }
      tags_.Add(other.tags_);
      if (other.comment_ != null) {
        if (comment_ == null || other.Comment != "") {
          Comment = other.Comment;
        }
      }
      if (other.ivx_ != null) {
        if (ivx_ == null || other.Ivx != 0) {
          Ivx = other.Ivx;
        }
      }
      tags2_.Add(other.tags2_);
      if (other.s_ != null) {
        if (s_ == null) {
          S = new global::Com.Variflight.Dataservice.Test.student();
        }
        S.MergeFrom(other.S);
      }
      ms_.Add(other.ms_);
      rs_.Add(other.rs_);
      ri_.Add(other.ri_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 24: {
            Age = input.ReadInt32();
            break;
          }
          case 34: {
            tags_.AddEntriesFrom(input, _map_tags_codec);
            break;
          }
          case 42: {
            string value = _single_comment_codec.Read(input);
            if (comment_ == null || value != "") {
              Comment = value;
            }
            break;
          }
          case 50: {
            int? value = _single_ivx_codec.Read(input);
            if (ivx_ == null || value != 0) {
              Ivx = value;
            }
            break;
          }
          case 58: {
            tags2_.AddEntriesFrom(input, _map_tags2_codec);
            break;
          }
          case 82: {
            ri_.AddEntriesFrom(input, _repeated_ri_codec);
            break;
          }
          case 802: {
            if (s_ == null) {
              S = new global::Com.Variflight.Dataservice.Test.student();
            }
            input.ReadMessage(S);
            break;
          }
          case 8010: {
            ms_.AddEntriesFrom(input, _map_ms_codec);
            break;
          }
          case 80074: {
            rs_.AddEntriesFrom(input, _repeated_rs_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class exam : pb::IMessage<exam> {
    private static readonly pb::MessageParser<exam> _parser = new pb::MessageParser<exam>(() => new exam());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<exam> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Variflight.Dataservice.Test.TestMessageReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public exam() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public exam(exam other) : this() {
      id_ = other.id_;
      cls_ = other.cls_;
      studentid_ = other.studentid_;
      score_ = other.score_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public exam Clone() {
      return new exam(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "cls" field.</summary>
    public const int ClsFieldNumber = 2;
    private string cls_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Cls {
      get { return cls_; }
      set {
        cls_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "studentid" field.</summary>
    public const int StudentidFieldNumber = 3;
    private int studentid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Studentid {
      get { return studentid_; }
      set {
        studentid_ = value;
      }
    }

    /// <summary>Field number for the "score" field.</summary>
    public const int ScoreFieldNumber = 4;
    private int score_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Score {
      get { return score_; }
      set {
        score_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as exam);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(exam other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Cls != other.Cls) return false;
      if (Studentid != other.Studentid) return false;
      if (Score != other.Score) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (Cls.Length != 0) hash ^= Cls.GetHashCode();
      if (Studentid != 0) hash ^= Studentid.GetHashCode();
      if (Score != 0) hash ^= Score.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (Cls.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Cls);
      }
      if (Studentid != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Studentid);
      }
      if (Score != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Score);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (Cls.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Cls);
      }
      if (Studentid != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Studentid);
      }
      if (Score != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Score);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(exam other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.Cls.Length != 0) {
        Cls = other.Cls;
      }
      if (other.Studentid != 0) {
        Studentid = other.Studentid;
      }
      if (other.Score != 0) {
        Score = other.Score;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18: {
            Cls = input.ReadString();
            break;
          }
          case 24: {
            Studentid = input.ReadInt32();
            break;
          }
          case 32: {
            Score = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class StudentScore : pb::IMessage<StudentScore> {
    private static readonly pb::MessageParser<StudentScore> _parser = new pb::MessageParser<StudentScore>(() => new StudentScore());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<StudentScore> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Variflight.Dataservice.Test.TestMessageReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StudentScore() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StudentScore(StudentScore other) : this() {
      s_ = other.s_ != null ? other.s_.Clone() : null;
      exams_ = other.exams_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StudentScore Clone() {
      return new StudentScore(this);
    }

    /// <summary>Field number for the "s" field.</summary>
    public const int SFieldNumber = 1;
    private global::Com.Variflight.Dataservice.Test.student s_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Com.Variflight.Dataservice.Test.student S {
      get { return s_; }
      set {
        s_ = value;
      }
    }

    /// <summary>Field number for the "exams" field.</summary>
    public const int ExamsFieldNumber = 2;
    private static readonly pbc::MapField<string, global::Com.Variflight.Dataservice.Test.exam>.Codec _map_exams_codec
        = new pbc::MapField<string, global::Com.Variflight.Dataservice.Test.exam>.Codec(pb::FieldCodec.ForString(10), pb::FieldCodec.ForMessage(18, global::Com.Variflight.Dataservice.Test.exam.Parser), 18);
    private readonly pbc::MapField<string, global::Com.Variflight.Dataservice.Test.exam> exams_ = new pbc::MapField<string, global::Com.Variflight.Dataservice.Test.exam>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::Com.Variflight.Dataservice.Test.exam> Exams {
      get { return exams_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as StudentScore);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(StudentScore other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(S, other.S)) return false;
      if (!Exams.Equals(other.Exams)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (s_ != null) hash ^= S.GetHashCode();
      hash ^= Exams.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (s_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(S);
      }
      exams_.WriteTo(output, _map_exams_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (s_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(S);
      }
      size += exams_.CalculateSize(_map_exams_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(StudentScore other) {
      if (other == null) {
        return;
      }
      if (other.s_ != null) {
        if (s_ == null) {
          S = new global::Com.Variflight.Dataservice.Test.student();
        }
        S.MergeFrom(other.S);
      }
      exams_.Add(other.exams_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (s_ == null) {
              S = new global::Com.Variflight.Dataservice.Test.student();
            }
            input.ReadMessage(S);
            break;
          }
          case 18: {
            exams_.AddEntriesFrom(input, _map_exams_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class StudentScoresMap : pb::IMessage<StudentScoresMap> {
    private static readonly pb::MessageParser<StudentScoresMap> _parser = new pb::MessageParser<StudentScoresMap>(() => new StudentScoresMap());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<StudentScoresMap> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Variflight.Dataservice.Test.TestMessageReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StudentScoresMap() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StudentScoresMap(StudentScoresMap other) : this() {
      results_ = other.results_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StudentScoresMap Clone() {
      return new StudentScoresMap(this);
    }

    /// <summary>Field number for the "results" field.</summary>
    public const int ResultsFieldNumber = 1;
    private static readonly pbc::MapField<int, global::Com.Variflight.Dataservice.Test.StudentScore>.Codec _map_results_codec
        = new pbc::MapField<int, global::Com.Variflight.Dataservice.Test.StudentScore>.Codec(pb::FieldCodec.ForInt32(8), pb::FieldCodec.ForMessage(18, global::Com.Variflight.Dataservice.Test.StudentScore.Parser), 10);
    private readonly pbc::MapField<int, global::Com.Variflight.Dataservice.Test.StudentScore> results_ = new pbc::MapField<int, global::Com.Variflight.Dataservice.Test.StudentScore>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::Com.Variflight.Dataservice.Test.StudentScore> Results {
      get { return results_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as StudentScoresMap);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(StudentScoresMap other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!Results.Equals(other.Results)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= Results.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      results_.WriteTo(output, _map_results_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += results_.CalculateSize(_map_results_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(StudentScoresMap other) {
      if (other == null) {
        return;
      }
      results_.Add(other.results_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            results_.AddEntriesFrom(input, _map_results_codec);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
